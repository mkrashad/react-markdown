{"version":3,"sources":["components/Editor.js","components/Preview.js","App.js","index.js"],"names":["Editor","props","myStyle","width","react_default","a","createElement","id","value","markdown","onChange","type","style","marked","setOptions","breaks","renderer","Renderer","link","href","title","text","concat","Preview","dangerouslySetInnerHTML","__html","placeholder","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","height","hidden","isMaximized","handeleMinimize","bind","assertThisInitialized","toggleMaximize","handeleClose","handleChange","setState","e","target","windows","className","color","theme","chrome","padding","controls","onCloseClick","onMinimizeClick","onMaximizeClick","onRestoreDownClick","components_Editor","components_Preview","React","Component","defaultProps","ReactDOM","render","src_App","document","getElementById"],"mappings":"oNAoBeA,EAlBA,SAAAC,GACb,IAEMC,EAAU,CACdC,MAHcF,EAAME,MAAQ,GAM9B,OACIC,EAAAC,EAAAC,cAAA,YACEC,GAAG,SACHC,MAAOP,EAAMQ,SACbC,SAAUT,EAAMS,SAChBC,KAAK,OACLC,MAAOV,sBCXfW,IAAOC,WAAW,CAChBC,QAAQ,IAIV,IAAMC,EAAW,IAAIH,IAAOI,SAC5BD,EAASE,KAAO,SAASC,EAAMC,EAAOC,GACpC,kCAAAC,OAAmCH,EAAnC,MAAAG,OAA4CD,EAA5C,SAGF,IAWeE,EAXC,SAAAtB,GACd,OACEG,EAAAC,EAAAC,cAAA,OACEC,GAAG,UACHiB,wBAAyB,CACvBC,OAAQZ,IAAOZ,EAAMQ,SAAU,CAAEO,SAAUA,QCX7CU,UAAW,+qCA+CXC,cAMJ,SAAAA,EAAY1B,GAAO,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM9B,KAEDkC,MAAQ,CACX1B,SAAUiB,EACVvB,MAAO,IACPiC,OAAQ,IACRC,QAAQ,EACRC,aAAa,GAIfV,EAAKW,gBAAkBX,EAAKW,gBAAgBC,KAArBX,OAAAY,EAAA,EAAAZ,CAAAD,IACvBA,EAAKc,eAAiBd,EAAKc,eAAeF,KAApBX,OAAAY,EAAA,EAAAZ,CAAAD,IACtBA,EAAKe,aAAef,EAAKe,aAAaH,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKgB,aAAehB,EAAKgB,aAAaJ,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IAfHA,iFAoBjBG,KAAKc,SAAS,CACZ1C,MAAO,IACPiC,OAAQ,GACRE,YAAaP,KAAKI,MAAMG,uDAM1BP,KAAKc,SAAS,CACZP,aAAcP,KAAKI,MAAMG,YACzBF,OAA8B,MAAtBL,KAAKI,MAAMC,OAAiB,IAAM,IAC1CjC,MAA4B,MAArB4B,KAAKI,MAAMhC,MAAgB,IAAO,6CAM3C4B,KAAKc,SAAS,CACZR,QAAQ,yCAKCS,GACXf,KAAKc,SAAS,CACZpC,SAAUqC,EAAEC,OAAOvC,yCAKrB,OACEJ,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAC0C,EAAA,OAAD,CACEC,UAAU,SACVC,MAAOnB,KAAK9B,MAAMiD,MAClBC,MAAOpB,KAAK9B,MAAMkD,MAClBC,QAAM,EACNhB,OAAQL,KAAKI,MAAMC,OACnBjC,MAAO4B,KAAKI,MAAMhC,MAClBkC,OAAQN,KAAKI,MAAME,OACnBgB,QAAQ,MAGRjD,EAAAC,EAAAC,cAAC0C,EAAA,SAAD,CACE5B,MAAM,iBACNkC,UAAQ,EACRhB,YAAaP,KAAKI,MAAMG,YACxBiB,aAAcxB,KAAKY,aACnBa,gBAAiBzB,KAAKQ,gBACtBkB,gBAAiB1B,KAAKW,eACtBgB,mBAAoB3B,KAAKW,iBAG3BtC,EAAAC,EAAAC,cAAC0C,EAAA,KAAD,CAAME,MAA4B,SAArBnB,KAAK9B,MAAMkD,MAAmB,QAAU,QAEnD/C,EAAAC,EAAAC,cAACqD,EAAD,CACElD,SAAUsB,KAAKI,MAAM1B,SACrBC,SAAUqB,KAAKa,aACfzC,MAAO4B,KAAKI,MAAMhC,UAKtBC,EAAAC,EAAAC,cAACsD,EAAD,CAASnD,SAAUsB,KAAKI,MAAM1B,mBA3FtBoD,IAAMC,WAAlBnC,EACGoC,aAAe,CACpBb,MAAO,UACPC,MAAO,QA8FIxB,QCpJfqC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.46eaf824.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Editor = props => {\r\n  const myWidth = props.width - 6;\r\n\r\n  const myStyle = {\r\n    width: myWidth\r\n  };\r\n\r\n  return (\r\n      <textarea\r\n        id=\"editor\"\r\n        value={props.markdown}\r\n        onChange={props.onChange}\r\n        type=\"text\"\r\n        style={myStyle}\r\n      />\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport marked from \"marked\";\r\n\r\n// ALLOWS LINE BREAKS WITH RETURN BUTTON\r\nmarked.setOptions({\r\n  breaks: true\r\n});\r\n\r\n// INSERTS target=\"_blank\" INTO HREF TAGS\r\nconst renderer = new marked.Renderer();\r\nrenderer.link = function(href, title, text) {\r\n  return `<a target=\"_blank\" href=\"${href}\">${text}</a>`;\r\n};\r\n\r\nconst Preview = props => {\r\n  return (\r\n    <div \r\n      id=\"preview\"\r\n      dangerouslySetInnerHTML={{\r\n        __html: marked(props.markdown, { renderer: renderer })\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React from \"react\";\nimport { Window, TitleBar, Text } from \"react-desktop/windows\";\n// import { Container } from 'react-bootstrap';\nimport Editor from \"./components/Editor\";\nimport Preview from \"./components/Preview\";\nimport \"./css/style.scss\";\n\n// Markdown Text Example\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\nclass App extends React.Component {\n  static defaultProps = {\n    color: \"#cc7f29\",\n    theme: \"dark\"\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markdown: placeholder,\n      width: 500,\n      height: 500,\n      hidden: false,\n      isMaximized: true\n    };\n\n    // Binding functions\n    this.handeleMinimize = this.handeleMinimize.bind(this);\n    this.toggleMaximize = this.toggleMaximize.bind(this);\n    this.handeleClose = this.handeleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Minimize Window\n  handeleMinimize() {\n    this.setState({\n      width: 499,\n      height: 40,\n      isMaximized: this.state.isMaximized\n    });\n  }\n\n  // Maximize Window\n  toggleMaximize() {\n    this.setState({\n      isMaximized: !this.state.isMaximized,\n      height: this.state.height === 500 ? 800 : 500,\n      width: this.state.width === 500 ? 1000 : 500\n    });\n  }\n\n  // Close Window\n  handeleClose() {\n    this.setState({\n      hidden: true\n    });\n  }\n\n  // Change the text\n  handleChange(e) {\n    this.setState({\n      markdown: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Main Window */}\n        <Window\n          className=\"window\"\n          color={this.props.color}\n          theme={this.props.theme}\n          chrome\n          height={this.state.height}\n          width={this.state.width}\n          hidden={this.state.hidden}\n          padding=\"2%\"\n        >\n          {/* TitleBar */}\n          <TitleBar\n            title=\"Command Prompt\"\n            controls\n            isMaximized={this.state.isMaximized}\n            onCloseClick={this.handeleClose}\n            onMinimizeClick={this.handeleMinimize}\n            onMaximizeClick={this.toggleMaximize}\n            onRestoreDownClick={this.toggleMaximize}\n          />\n          {/* Text in window */}\n          <Text color={this.props.theme === \"dark\" ? \"white\" : \"#333\"}>\n            {/* Editor Component */}\n            <Editor\n              markdown={this.state.markdown}\n              onChange={this.handleChange}\n              width={this.state.width}\n            />\n          </Text>\n        </Window>\n        {/* Preview Component */}\n          <Preview markdown={this.state.markdown} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}